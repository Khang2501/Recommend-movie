{"version":3,"sources":["pages/browse/NavBar.module.css","pages/browse/Original.module.css","pages/browse/MoviesDetail.module.css","pages/browse/ListMovies.module.css","pages/search/SearchForm.module.css","pages/browse/Banner.module.css","pages/search/ResultList.module.css","pages/browse/NarBav.js","pages/browse/Banner.js","custom-hook/useAPI.js","pages/browse/Original.js","pages/browse/MoviesDetail.js","pages/browse/ListMovies.js","pages/browse/Browse.jsx","pages/search/SearchForm.js","pages/search/ResultList.js","pages/search/Search.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","navigate","useNavigate","useState","classes","navbar","background","setBackground","window","addEventListener","scrollY","className","onClick","Banner","props","random","dataBanner","length","Math","floor","container","img","src","backdropPath","alt","undefined","title","overView","useAPI","error","setError","isLoading","setIsLoading","fetchAPI","useCallback","url","setData","fetch","response","ok","Error","json","data","message","Original","moviesOriginals","setMoviesOriginals","useEffect","original","movieObj","loadedMovies","results","map","responseAPI","push","key","id","original_name","posterPath","poster_path","overview","releaseDate","first_air_date","vote","vote_average","loadedMovies10","slice","ul","movie","MoviesDetail","movieDetail","setMovieDetail","videoError","setVideoError","moviesList","fetchList","status","type","site","left","right","height","width","allow","ListMovies","setMoviesList","movieKey","setMovieKey","toggleDetail","setToggleDetail","original_title","backdrop_path","release_date","reset","items","Browse","requestsAPI","movies","setMovies","fetchMovie","fetchTrending","errorBanner","process","console","log","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","SearchForm","enteredInput","setEnteredInput","inputForm","searchHandler","event","trim","value","onChange","target","ResultList","resultMovies","setresultMovies","inputResult","fetchResultMovies","total_results","style","resultList","Search","inputData","setInputData","showResult","setShowResult","input","App","API_KEY","requests","fetchSearch","path","element","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.31d62e78.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"NavBar_navbar__2z_pO\",\"background\":\"NavBar_background__3s5On\",\"navbar_ul\":\"NavBar_navbar_ul__G0Lwy\",\"navbar_home\":\"NavBar_navbar_home__1V9eV\",\"navbar_search\":\"NavBar_navbar_search__2WKev\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"Original_ul__2S9yd\",\"img\":\"Original_img__2uzXp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movies_detail_container\":\"MoviesDetail_movies_detail_container__283Dx\",\"left\":\"MoviesDetail_left__2fllN\",\"right\":\"MoviesDetail_right__zldhf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List-movies_container\":\"ListMovies_List-movies_container__Z9jBx\",\"ul\":\"ListMovies_ul__2sFUp\",\"items\":\"ListMovies_items__356P6\",\"img\":\"ListMovies_img__Ya3w1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-form\":\"SearchForm_search-form__NP76g\",\"search-form_detail\":\"SearchForm_search-form_detail__30fWK\",\"search-form_input\":\"SearchForm_search-form_input__1mg_W\",\"search-form_button\":\"SearchForm_search-form_button__IZ3Pm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Banner_container__1GarI\",\"img\":\"Banner_img__3shMP\",\"banner_content\":\"Banner_banner_content__1LeBb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resultList\":\"ResultList_resultList__IKC6p\",\"title\":\"ResultList_title__2dENl\",\"error\":\"ResultList_error__1sie_\"};","import React, { useState } from \"react\";\r\nimport classes from \"./NavBar.module.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\n\r\nconst NavBar = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [background, setBackground] = useState(classes.navbar);\r\n\r\n  const changeBackground = () => {\r\n    if (window.scrollY >= 120) {\r\n      setBackground(`${classes[\"navbar\"]} ${classes[\"background\"]}`);\r\n    } else {\r\n      setBackground(classes.navbar);\r\n    }\r\n  };\r\n\r\n  window.addEventListener(\"scroll\", changeBackground);\r\n  return (\r\n    <div className={background}>\r\n      <ul className={classes[\"navbar_ul\"]}>\r\n        <li\r\n          className={classes[\"navbar_home\"]}\r\n          onClick={() => {\r\n            navigate(\"/\");\r\n          }}\r\n        >\r\n          Movie App\r\n        </li>\r\n        <li\r\n          className={classes[\"navbar_search\"]}\r\n          onClick={() => {\r\n            navigate(\"/search\");\r\n          }}\r\n        >\r\n          <FaSearch />\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nimport classes from \"./Banner.module.css\";\r\n\r\nconst Banner = (props) => {\r\n  let random;\r\n  if (props.dataBanner.length !== 1) {\r\n    random = Math.floor(Math.random() * props.dataBanner.length - 1);\r\n  } else {\r\n    random = 0;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <img\r\n        className={classes.img}\r\n        src={props.dataBanner[random].backdropPath}\r\n        alt=\"img\"\r\n      ></img>\r\n      <div className={classes[\"banner_content\"]}>\r\n        <h1>\r\n          {props.dataBanner[random].title === undefined\r\n            ? \"No movie name\"\r\n            : props.dataBanner[random].title}\r\n        </h1>\r\n        <button>Play</button>\r\n        <button>My list</button>\r\n        <p>{props.dataBanner[random].overView}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useAPI = () => {\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const fetchAPI = useCallback(async (url, setData) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(url);\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went Wrong\");\r\n      }\r\n      const data = await response.json();\r\n      setData(data);\r\n      setIsLoading(true);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  }, []);\r\n\r\n  return {\r\n    fetchAPI,\r\n    error,\r\n    isLoading,\r\n  };\r\n};\r\n\r\nexport default useAPI;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport classes from \"./Original.module.css\";\r\nimport useAPI from \"../../custom-hook/useAPI\";\r\nconst Original = (props) => {\r\n  const [moviesOriginals, setMoviesOriginals] = useState([]);\r\n\r\n  const { isLoading, fetchAPI } = useAPI();\r\n\r\n  useEffect(() => {\r\n    const transformTasks = (movieObj) => {\r\n      const loadedMovies = [];\r\n\r\n      movieObj.results.map((responseAPI) => {\r\n        return loadedMovies.push({\r\n          key: responseAPI.id,\r\n          title: responseAPI.original_name,\r\n          posterPath: `https://image.tmdb.org/t/p/w500/${responseAPI.poster_path}`,\r\n          overView: responseAPI.overview,\r\n          releaseDate: responseAPI.first_air_date,\r\n          vote: responseAPI.vote_average,\r\n        });\r\n      });\r\n      const loadedMovies10 = loadedMovies.slice(0, 10);\r\n      setMoviesOriginals(loadedMovies10);\r\n    };\r\n\r\n    fetchAPI(`https://api.themoviedb.org/3${props.original}`, transformTasks);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {isLoading && (\r\n        <ul className={classes.ul}>\r\n          {moviesOriginals.map((movie) => (\r\n            <li key={movie.key}>\r\n              <img\r\n                className={classes.img}\r\n                src={movie.posterPath}\r\n                alt={movie.title}\r\n              ></img>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Original;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport classes from \"./MoviesDetail.module.css\";\r\nconst MoviesDetail = (props) => {\r\n  const [movieDetail, setMovieDetail] = useState();\r\n  const [videoError, setVideoError] = useState(false);\r\n  const moviesList = props.moviesList;\r\n\r\n  const fetchList = async () => {\r\n    setVideoError(false);\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `https://api.themoviedb.org/3//movie/${props.moviesList.key}/videos?api_key=30736126a260889e4fa8c79d809f759a`\r\n      );\r\n      if (response.status === 404) {\r\n        setVideoError(true);\r\n        throw new Error(\"404 not found\");\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.results.length === 0) setVideoError(true);\r\n\r\n      const loadedMovies = [];\r\n      data.results.map((responseAPI) => {\r\n        if (responseAPI.type === \"Trailer\" && responseAPI.site === \"YouTube\") {\r\n          return loadedMovies.push(responseAPI.key);\r\n        }\r\n      });\r\n\r\n      if (loadedMovies.length === 0)\r\n        data.results.map((responseAPI) => {\r\n          if (responseAPI.type === \"Teaser\" && responseAPI.site === \"YouTube\") {\r\n            loadedMovies.push(responseAPI.key);\r\n          }\r\n        });\r\n      if (loadedMovies.length === 0)\r\n        data.results.map((responseAPI) => {\r\n          if (\r\n            responseAPI.type === \"Behind the Scenes\" &&\r\n            responseAPI.site === \"YouTube\"\r\n          ) {\r\n            loadedMovies.push(responseAPI.key);\r\n          }\r\n        });\r\n      if (loadedMovies.length === 0) {\r\n        setVideoError(true);\r\n      }\r\n      setMovieDetail(loadedMovies[0]);\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchList();\r\n  }, [moviesList]);\r\n\r\n  return (\r\n    <div className={classes[\"movies_detail_container\"]}>\r\n      <div className={classes.left}>\r\n        <h2>{moviesList.title}</h2>\r\n        <div></div>\r\n        <h4>Release Date: {moviesList.releaseDate}</h4>\r\n        <h4>Vote: {moviesList.vote}/10</h4>\r\n        <p>{moviesList.overView}</p>\r\n      </div>\r\n\r\n      {videoError ? (\r\n        <img\r\n          className={classes[\"video_error\"]}\r\n          src={moviesList.backdropPath}\r\n          alt={moviesList.title}\r\n        ></img>\r\n      ) : (\r\n        <iframe\r\n          className={classes.right}\r\n          height=\"300\"\r\n          width=\"630\"\r\n          src={`https://www.youtube.com/embed/${movieDetail}`}\r\n          title=\"YouTube video player\"\r\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n        ></iframe>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviesDetail;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MoviesDetail from \"./MoviesDetail\";\r\nimport classes from \"./ListMovies.module.css\";\r\nimport useAPI from \"../../custom-hook/useAPI\";\r\nconst ListMovies = (props) => {\r\n  const [moviesList, setMoviesList] = useState([]);\r\n  const { isLoading, fetchAPI } = useAPI();\r\n\r\n  const [movieKey, setMovieKey] = useState();\r\n  const [movieDetail, setMovieDetail] = useState({});\r\n  const [toggleDetail, setToggleDetail] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const transformTasks = (movieObj) => {\r\n      const loadedMovies = [];\r\n\r\n      movieObj.results.map((responseAPI) => {\r\n        loadedMovies.push({\r\n          key: responseAPI.id,\r\n          title: responseAPI.original_title\r\n            ? responseAPI.original_title\r\n            : responseAPI.original_name,\r\n          backdropPath:\r\n            responseAPI.backdrop_path == null\r\n              ? `https://image.tmdb.org/t/p/w500/wwemzKWzjKYJFfCeiB57q3r4Bcm.png`\r\n              : `https://image.tmdb.org/t/p/w500/${responseAPI.backdrop_path}`,\r\n          overView: responseAPI.overview,\r\n          releaseDate: responseAPI.release_date,\r\n          vote: responseAPI.vote_average,\r\n        });\r\n      });\r\n\r\n      setMoviesList(loadedMovies);\r\n    };\r\n\r\n    fetchAPI(`https://api.themoviedb.org/3${props.fetchAPI}`, transformTasks);\r\n  }, []);\r\n\r\n  const reset = () => {\r\n    setMovieKey();\r\n    setToggleDetail(false);\r\n    setMovieDetail({});\r\n  };\r\n  return (\r\n    <div className={classes[\"List-movies_container\"]}>\r\n      <h2>{props.title}</h2>\r\n      {isLoading && (\r\n        <ul className={classes.ul}>\r\n          {moviesList.map((movie) => (\r\n            <li key={movie.key} className={classes.items}>\r\n              <img\r\n                className={classes.img}\r\n                src={movie.backdropPath}\r\n                alt={movie.title}\r\n                onClick={() => {\r\n                  if (movieKey !== movie.key) {\r\n                    reset();\r\n                    setMovieKey(movie.key);\r\n                    setMovieDetail(movie);\r\n\r\n                    setToggleDetail(true);\r\n                  } else {\r\n                    reset();\r\n                  }\r\n                }}\r\n              ></img>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n\r\n      {toggleDetail && <MoviesDetail moviesList={movieDetail} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListMovies;\r\n","import React from \"react\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport NavBar from \"./NarBav\";\nimport Banner from \"./Banner\";\nimport Original from \"./Original\";\nimport ListMovies from \"./ListMovies\";\nfunction Browse(props) {\n  const requestsAPI = props.requestsAPI;\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchMovie = useCallback(async () => {\n    try {\n      const response = await fetch(\n        `https://api.themoviedb.org/3${requestsAPI.fetchTrending}`\n      );\n\n      if (response.status !== 200) {\n        throw new Error(\"Something went wrong!\");\n      }\n      const data = await response.json();\n\n      const loadedMovies = [];\n      data.results.map((responseAPI) => {\n        loadedMovies.push({\n          key: responseAPI.id,\n          title: responseAPI.original_title,\n          backdropPath: `https://image.tmdb.org/t/p/w500/${responseAPI.backdrop_path}`,\n          overView: responseAPI.overview,\n        });\n      });\n      setMovies(loadedMovies);\n      setIsLoading(true);\n    } catch (error) {\n      const errorBanner = [\n        {\n          key: true,\n          title: \"Something went wrong\",\n          backdropPath: `${process.env.PUBLIC_URL}/assets/images/background.jpg`,\n          overView: \"Something went wrong\",\n        },\n      ];\n      setMovies(errorBanner);\n      setIsLoading(true);\n      console.log(error.message);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchMovie();\n  }, [fetchMovie]);\n\n  return (\n    <div className=\"app\">\n      {isLoading && <Banner dataBanner={movies} />}\n      <NavBar />\n\n      <Original original={requestsAPI.fetchNetflixOriginals} />\n      <ListMovies title=\"Xu hướng\" fetchAPI={requestsAPI.fetchTrending} />\n      <ListMovies title=\"Xếp hạng cao\" fetchAPI={requestsAPI.fetchTopRated} />\n      <ListMovies title=\"Hành động\" fetchAPI={requestsAPI.fetchActionMovies} />\n      <ListMovies title=\"Hài hước\" fetchAPI={requestsAPI.fetchComedyMovies} />\n      <ListMovies title=\"Kinh dị\" fetchAPI={requestsAPI.fetchHorrorMovies} />\n      <ListMovies title=\"Lãng mạng\" fetchAPI={requestsAPI.fetchRomanceMovies} />\n      <ListMovies title=\"Tài liệu\" fetchAPI={requestsAPI.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default Browse;\n","import React, { useState } from \"react\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\n\r\nimport classes from \"./SearchForm.module.css\";\r\nconst SearchForm = (props) => {\r\n  const [enteredInput, setEnteredInput] = useState(\"\");\r\n\r\n  const inputForm = props.inputForm;\r\n\r\n  const inputChangeHandler = (event) => {\r\n    setEnteredInput(event.target.value);\r\n  };\r\n\r\n  const searchHandler = (event) => {\r\n    if (enteredInput.trim() === \"\") return;\r\n    inputForm(enteredInput);\r\n  };\r\n\r\n  const resetHandler = () => {\r\n    setEnteredInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className={classes[\"search-form\"]}>\r\n      <div className={classes[\"search-form_detail\"]}>\r\n        <div className={classes[\"search-form_input\"]}>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredInput}\r\n            onChange={inputChangeHandler}\r\n          />\r\n          <button onClick={searchHandler}>\r\n            <FaSearch />\r\n          </button>\r\n        </div>\r\n        <div className={classes[\"search-form_button\"]}>\r\n          <button onClick={resetHandler}>RESET</button>\r\n          <button onClick={searchHandler}>SEARCH</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MoviesDetail from \"../browse/MoviesDetail\";\r\nimport style from \"./ResultList.module.css\";\r\nimport classes from \"../browse/Original.module.css\";\r\nconst ResultList = (props) => {\r\n  const [resultMovies, setresultMovies] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const [movieKey, setMovieKey] = useState();\r\n  const [movieDetail, setMovieDetail] = useState({});\r\n  const [toggleDetail, setToggleDetail] = useState(false);\r\n\r\n  const inputResult = props.inputResult;\r\n\r\n  const fetchResultMovies = async () => {\r\n    setToggleDetail(false);\r\n    try {\r\n      const response = await fetch(\r\n        `https://api.themoviedb.org/3/search/movie?api_key=30736126a260889e4fa8c79d809f759a&language=en-US&query=${inputResult}&page=1`\r\n      );\r\n      const data = await response.json();\r\n\r\n      if (data.total_results === 0) throw new Error(\"No movies\");\r\n\r\n      const loadedMovies = [];\r\n      data.results.map((responseAPI) => {\r\n        return loadedMovies.push({\r\n          key: responseAPI.id,\r\n          title: responseAPI.original_title,\r\n          posterPath:\r\n            responseAPI.poster_path == null\r\n              ? `${process.env.PUBLIC_URL}/assets/images/poster-replace.jpg`\r\n              : `https://image.tmdb.org/t/p/w500/${responseAPI.poster_path}`,\r\n          backdropPath:\r\n            responseAPI.backdrop_path == null\r\n              ? `${process.env.PUBLIC_URL}/assets/images/background.jpg`\r\n              : `https://image.tmdb.org/t/p/w500/${responseAPI.backdrop_path}`,\r\n          overView: responseAPI.overview,\r\n          releaseDate: responseAPI.release_date,\r\n          vote: responseAPI.vote_average,\r\n        });\r\n      });\r\n\r\n      setresultMovies(loadedMovies);\r\n      setIsLoading(true);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchResultMovies();\r\n  }, [inputResult]);\r\n\r\n  const reset = () => {\r\n    setMovieKey();\r\n    setToggleDetail(false);\r\n    setMovieDetail({});\r\n  };\r\n\r\n  return (\r\n    <div className={style.resultList}>\r\n      <h2 className={style.title}>Search Result</h2>\r\n      {isLoading && (\r\n        <ul className={classes.ul}>\r\n          {resultMovies.map((movie) => (\r\n            <li key={movie.key}>\r\n              <img\r\n                className={classes.img}\r\n                src={movie.posterPath}\r\n                alt={movie.title}\r\n                onClick={() => {\r\n                  if (movieKey !== movie.key) {\r\n                    reset();\r\n                    setMovieKey(movie.key);\r\n                    setMovieDetail(movie);\r\n\r\n                    setToggleDetail(true);\r\n                  } else {\r\n                    reset();\r\n                  }\r\n                }}\r\n              ></img>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      {!isLoading && <p className={style.error}>{error}</p>}\r\n      {toggleDetail && <MoviesDetail moviesList={movieDetail} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultList;\r\n","import React, { useState } from \"react\";\n\nimport NavBar from \"../browse/NarBav\";\nimport SearchForm from \"./SearchForm\";\nimport ResultList from \"./ResultList\";\n\nconst Search = () => {\n  const [inputData, setInputData] = useState(\"\");\n  const [showResult, setShowResult] = useState(false);\n  const inputFormHandler = (input) => {\n    setInputData(input);\n    setShowResult(true);\n  };\n\n  return (\n    <div className=\"app\">\n      <NavBar />\n      <SearchForm inputForm={inputFormHandler} />\n      {showResult && <ResultList inputResult={inputData} />}\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nimport Browse from \"./pages/browse/Browse\";\nimport Search from \"./pages/search/Search\";\n\nfunction App() {\n  const API_KEY = \"30736126a260889e4fa8c79d809f759a\";\n  const requests = {\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n    fetchSearch: `/search/movie?api_key=${API_KEY}&language=en-US`,\n  };\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Browse requestsAPI={requests} />} />\n        <Route path=\"/search\" element={<Search />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}